#!/usr/bin/env python

import click
import sys
import os.path

# Import from sibling directory ..\api
sys.path.append(os.path.dirname(os.path.abspath(__file__)) + "/..")

import main

curdir = os.getcwd() + '/'


@click.command()
@click.option('-m', type=click.Choice(['general', 'bishop']), help="Specifies Slope Stability Method.")
@click.option('-t', type=float, default=None, help="Specifies the Trial FOS for bishops method.")
@click.option('-s', type=float, default=None, help="Soil Cohesion in KPa.")
@click.option('-d', type=float, default=None, help="Angle of Internal Friction - in degrees -")
@click.option('-n', type=int, default=None, help="Number of Slices to Calculate on Slope.")
@click.option('-w', type=float, default=None, help="Water Pore Pressure in KPa.")
@click.option('-c', type=int, default=None, help="Number of Slice Bulk to Output to Screen - only works if Verbose is"
                                               "turned on, -v")
@click.option('-p', type=click.Choice(['yes', 'no']), help="Display percentage complete.")
@click.option('-v', type=click.Choice(['yes', 'no']), help="Verbose Mode.")
@click.option('-e', type=click.Choice(['yes', 'no']), help="Save Final Figure.")
@click.option('-o', type=click.Choice(['yes', 'no']), help="Show Final Figure.")
@click.option('-x', type=click.Choice(['yes', 'no']), help="Perform Critical Slope Analysis on Data Set.")
@click.option('-a', type=str, default=None, help="Ellipsoid Coordinates - x,y,h,v")
@click.option('-l', type=str, default=None, help="Delimiter used when reading Data file.")
@click.option('-b', type=float, default=None, help="Bulk Density of Soil.")
@click.argument('config_file')
@click.argument('data_file')
def fos(m, t, s, d, n, w, c, p, v, e, o, x, a, l, b, config_file, data_file):
	"""
	Usage:

	fos [-cdnsw] [-e YES/NO] [-m GENERAL/BISHOP] [-o YES/NO] [-p YES/NO] [-v YES/NO] [-x YES/NO] [CONFIG_FILE] [DATA_FILE]
	
	Detailed Help:
	man fos
	"""
	config = curdir + config_file
	data = curdir + data_file
	args = (m, t, s, d, n, w, c, p, v, e, o, x, a, l, b, config_file, data_file)
	main.main(*args)
	


if __name__ == '__main__':
	fos()
	
